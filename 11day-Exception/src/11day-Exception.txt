** Exception Handling **
- Exception Handling (예외 처리)
	: 시스템 실행시 Error or Exception 발생하면
	jvm은 실행을 중단한다.
	Exception Handling의 목적은
	Exception 발생시 대안흐름(대처방안)을 실행하고
	프로그램을 정상 수행시크는 데 있다.
	
	ex) 출금 트랜잭션(작업단위)의 예
	
		카드 넣는다()
		비밀번호 입력한다()
		출금액을 입력한다()
		잔액을 확인한다()
		현금을 수령한다()
		카드를 반환한다()
		초기화면으로 돌아간다()
		
		위 트랜잭션을 try catch finally 적용한다면 아래와 같다.
		try{
		카드 넣는다() //카드 오류 Exception 발생 가능성 - 바로 catch로
		비밀번호 입력한다() //비밀번호 오류 Exception 발생 가능성 - 바로 catch로
		출금액을 입력한다()
		잔액을 확인한다() //잔액 오류 Exception 발생 가능성 - 바로 catch로
		현금을 수령한다() //try의 가장 마지막 작업으로 배치되어야 함!!
		}catch(Exception e){ //Exception 발생시 대안흐름
			출금불가 작업불가 메세지를 화면 또는 용지로 제공한다.
		}finally{ //반드시 고객 카드는 반환하도록 처리.
		카드를 반환한다()
		}
		//출금작업 후 후속작업
		초기화면으로 돌아간다()
		
- Exception Handling 관련 주요 keyword
try : Exception 발생 예상 영역 블럭지정
catch : Exception을 처리, 대안흐름을 실행
finally : Exception 발생 여부 및 처리여부와 관계없이 항상 실행
throw : Exception 을 발생
throws : Exception 을 호출한 곳(호출한 메서드)으로 던진다.
		작업을 수행하다가 Exception이 발생되면 작업을 호출한 대상에게
		Exception을 던져서 처리를 위임하겠다는 의미
		
		
		
		
		
		
		
		
		